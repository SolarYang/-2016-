
import java.util.Scanner;

public class Main {

    static char[][] buffer;
    static int height, weight;
    static int regionNum = 0;
    static int[][] regions;//新建区域，-1表示‘.’0表示‘#’

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String fl = sc.nextLine();
        height = Integer.parseInt(fl.split(" ")[0]);
        weight = Integer.parseInt(fl.split(" ")[1]);
        buffer = new char[height][weight];
        regions = new int[height][weight];
        for (int i = 0; i < height; i++) {
            buffer[i] = sc.nextLine().toCharArray();
        }
        //赋初值
        for (int i = 0; i < height; i++) {
            for (int j = 0; j < weight; j++) {
                if (buffer[i][j] == '.') {
                    mark(i, j, -1);
                }
            }
        }
        //遍历
        for (int i = 0; i < height; i++) {
            for (int j = 0; j < weight; j++) {
                traverse(i, j, false);
            }
        }
        int[] countRegion = new int[regionNum];//记录每个区占据的大小
        int[] sumI = new int[regionNum];
        int[] sumJ = new int[regionNum];
        int[] avgI = new int[regionNum];
        int[] avgJ = new int[regionNum];
        int s = 0, m = 0;
        for (int r = 1; r <= regionNum; r++) {
            for (int i = 0; i < height; i++) {
                for (int j = 0; j < weight; j++) {
                    countRegion[r - 1] += regions[i][j] == r ? 1 : 0;
                    sumI[r - 1] += regions[i][j] == r ? i : 0;
                    sumJ[r - 1] += regions[i][j] == r ? j : 0;
                }
            }
            avgI[r - 1] = sumI[r - 1] / countRegion[r - 1];
            avgJ[r - 1] = sumJ[r - 1] / countRegion[r - 1];
            //System.out.println(r+":"+countRegion[r - 1]+"avg:"+avgI[r - 1]+":"+avgJ[r - 1]);
            if (buffer[avgI[r - 1]][avgJ[r - 1]] == '#') {
                s++;
            } else {
                m++;
            }

        }
        System.out.println(s + " " + m);
//        for (int i = 0; i < height; i++) {
//            for (int j = 0; j < weight; j++) {
//                System.out.print(" " + regions[i][j]);
//            }
//            System.out.println();
//        }

    }

    public static void traverse(int i, int j, boolean second) {
        if (regions[i][j] != 0) {    //如果不需遍历
            return;
        }
        if (buffer[i][j] == '#') {//如果遍历得出
            if (!second) {
                mark(i, j, ++regionNum);
            } else {
                mark(i, j, regionNum);
            }
            traverse(i - 1, j - 1, true);
            traverse(i - 1, j, true);
            traverse(i - 1, j + 1, true);
            traverse(i, j - 1, true);
            traverse(i, j + 1, true);
            traverse(i + 1, j - 1, true);
            traverse(i + 1, j, true);
            traverse(i + 1, j + 1, true);
        }
    }

    public static void mark(int i, int j, int num) {
        regions[i][j] = num;
    }
}
/*

50 50
..................................................
..................................................
..........................................#.......
............................###..........##.......
.......##..................##.##........#.........
.......##..................#...........##.........
......###.......#..........#...........##.........
......####.....###.........###..........######....
......#.##.....###..........####..............#...
......#.##....####............##..............#...
.....##..#...##.#..........#...#.............##...
.....##..#..##.##..........#####...........##.....
.....#...#.##..##.................................
.....#...###...#..................................
.....#...###...#..................................
.........##...##......................##..........
..............##.....##..............###..........
....................###............###............
...................###.............##.............
..................###.............##..............
.................###..............##..............
................###......###.......########.......
...............###.....#####........########......
..............###...########...............##.....
.............###..#####..##................##.....
............########....###................##.....
...........#######......##.....##.........###.....
............###.........##....###.......####......
.......................###...###.......###........
.......#...............##...###...................
.....####.............###..###....................
...######.............##..###.....................
..####................######......................
..###................######.......................
.###.................#####.......##...............
.###................#####........######...........
.###.................###.........##########.......
..##########.......................##...####......
..############......................##............
....###########......................###..........
.............##.......................###.........
.............###.......................###........
.............###...................#######........
.............##................########...........
............###................####...............
..........####..................######............
.......######......................######.........
.......###.............................##.........
..................................................
..................................................



 */
